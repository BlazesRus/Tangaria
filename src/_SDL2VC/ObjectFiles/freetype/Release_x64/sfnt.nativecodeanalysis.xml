<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\stb\</FILEPATH>
      <FILENAME>stb_sprintf.h</FILENAME>
      <LINE>1037</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbsp_vsprintfcb</FUNCTION>
    <DECORATED>stbsp_vsprintfcb</DECORATED>
    <FUNCLINE>349</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\stb\</FILEPATH>
      <FILENAME>stb_sprintf.h</FILENAME>
      <LINE>1037</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbsp_vsprintfcb</FUNCTION>
    <DECORATED>stbsp_vsprintfcb</DECORATED>
    <FUNCLINE>349</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>sfdriver.c</FILENAME>
      <LINE>318</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>murmur_hash_3_128</FUNCTION>
    <DECORATED>murmur_hash_3_128</DECORATED>
    <FUNCLINE>300</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>sfdriver.c</FILENAME>
      <LINE>369</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>murmur_hash_3_128</FUNCTION>
    <DECORATED>murmur_hash_3_128</DECORATED>
    <FUNCLINE>300</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>sfobjs.c</FILENAME>
      <LINE>689</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>sfnt_init_face</FUNCTION>
    <DECORATED>sfnt_init_face</DECORATED>
    <FUNCLINE>491</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttbdf.c</FILENAME>
      <LINE>105</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_bdf_props</FUNCTION>
    <DECORATED>tt_face_load_bdf_props</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttbdf.c</FILENAME>
      <LINE>116</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_bdf_props</FUNCTION>
    <DECORATED>tt_face_load_bdf_props</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttbdf.c</FILENAME>
      <LINE>163</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_find_bdf_prop</FUNCTION>
    <DECORATED>tt_face_find_bdf_prop</DECORATED>
    <FUNCLINE>139</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttbdf.c</FILENAME>
      <LINE>186</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_find_bdf_prop</FUNCTION>
    <DECORATED>tt_face_find_bdf_prop</DECORATED>
    <FUNCLINE>139</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>338</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_validate</FUNCTION>
    <DECORATED>tt_cmap2_validate</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>338</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_validate</FUNCTION>
    <DECORATED>tt_cmap2_validate</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>372</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_validate</FUNCTION>
    <DECORATED>tt_cmap2_validate</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>378</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_validate</FUNCTION>
    <DECORATED>tt_cmap2_validate</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>438</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_get_subheader</FUNCTION>
    <DECORATED>tt_cmap2_get_subheader</DECORATED>
    <FUNCLINE>403</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>429</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_get_subheader</FUNCTION>
    <DECORATED>tt_cmap2_get_subheader</DECORATED>
    <FUNCLINE>403</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>482</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_char_index</FUNCTION>
    <DECORATED>tt_cmap2_char_index</DECORATED>
    <FUNCLINE>456</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>541</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap2_char_next</FUNCTION>
    <DECORATED>tt_cmap2_char_next</DECORATED>
    <FUNCLINE>495</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>740</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_set_range</FUNCTION>
    <DECORATED>tt_cmap4_set_range</DECORATED>
    <FUNCLINE>727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>743</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_set_range</FUNCTION>
    <DECORATED>tt_cmap4_set_range</DECORATED>
    <FUNCLINE>727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>746</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_set_range</FUNCTION>
    <DECORATED>tt_cmap4_set_range</DECORATED>
    <FUNCLINE>727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>749</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_set_range</FUNCTION>
    <DECORATED>tt_cmap4_set_range</DECORATED>
    <FUNCLINE>727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>816</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_next</FUNCTION>
    <DECORATED>tt_cmap4_next</DECORATED>
    <FUNCLINE>789</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>973</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>974</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>975</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>976</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>981</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1035</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1035</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1052</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1052</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_validate</FUNCTION>
    <DECORATED>tt_cmap4_validate</DECORATED>
    <FUNCLINE>892</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1172</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_linear</FUNCTION>
    <DECORATED>tt_cmap4_char_map_linear</DECORATED>
    <FUNCLINE>1096</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1268</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1270</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1316</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1326</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1342</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1344</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1360</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1362</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1392</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1394</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1410</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap4_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap4_char_map_binary</DECORATED>
    <FUNCLINE>1231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1656</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap6_char_index</FUNCTION>
    <DECORATED>tt_cmap6_char_index</DECORATED>
    <FUNCLINE>1643</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>1686</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap6_char_next</FUNCTION>
    <DECORATED>tt_cmap6_char_next</DECORATED>
    <FUNCLINE>1665</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>2125</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap10_char_index</FUNCTION>
    <DECORATED>tt_cmap10_char_index</DECORATED>
    <FUNCLINE>2107</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>2155</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap10_char_next</FUNCTION>
    <DECORATED>tt_cmap10_char_next</DECORATED>
    <FUNCLINE>2134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>2350</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap12_next</FUNCTION>
    <DECORATED>tt_cmap12_next</DECORATED>
    <FUNCLINE>2334</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>2430</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap12_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap12_char_map_binary</DECORATED>
    <FUNCLINE>2396</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>2698</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap13_next</FUNCTION>
    <DECORATED>tt_cmap13_next</DECORATED>
    <FUNCLINE>2682</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>2761</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap13_char_map_binary</FUNCTION>
    <DECORATED>tt_cmap13_char_map_binary</DECORATED>
    <FUNCLINE>2727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>3199</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap14_char_map_def_binary</FUNCTION>
    <DECORATED>tt_cmap14_char_map_def_binary</DECORATED>
    <FUNCLINE>3183</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>3233</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap14_char_map_nondef_binary</FUNCTION>
    <DECORATED>tt_cmap14_char_map_nondef_binary</DECORATED>
    <FUNCLINE>3217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcmap.c</FILENAME>
      <LINE>3266</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_cmap14_find_variant</FUNCTION>
    <DECORATED>tt_cmap14_find_variant</DECORATED>
    <FUNCLINE>3250</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>219</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_colr</FUNCTION>
    <DECORATED>tt_face_load_colr</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>219</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_colr</FUNCTION>
    <DECORATED>tt_face_load_colr</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>219</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_colr</FUNCTION>
    <DECORATED>tt_face_load_colr</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>219</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_colr</FUNCTION>
    <DECORATED>tt_face_load_colr</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>230</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_colr</FUNCTION>
    <DECORATED>tt_face_load_colr</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>294</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_base_glyph_record</FUNCTION>
    <DECORATED>find_base_glyph_record</DECORATED>
    <FUNCLINE>282</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>473</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>read_paint</FUNCTION>
    <DECORATED>read_paint</DECORATED>
    <FUNCLINE>432</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>763</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_base_glyph_v1_record</FUNCTION>
    <DECORATED>find_base_glyph_v1_record</DECORATED>
    <FUNCLINE>745</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>883</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_get_color_glyph_clipbox</FUNCTION>
    <DECORATED>tt_face_get_color_glyph_clipbox</DECORATED>
    <FUNCLINE>831</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1002</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_get_paint_layers</FUNCTION>
    <DECORATED>tt_face_get_paint_layers</DECORATED>
    <FUNCLINE>963</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1008</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_get_paint_layers</FUNCTION>
    <DECORATED>tt_face_get_paint_layers</DECORATED>
    <FUNCLINE>963</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1049</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_get_colorline_stops</FUNCTION>
    <DECORATED>tt_face_get_colorline_stops</DECORATED>
    <FUNCLINE>1033</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1219</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_colr_blend_layer</FUNCTION>
    <DECORATED>tt_face_colr_blend_layer</DECORATED>
    <FUNCLINE>1147</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1220</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_colr_blend_layer</FUNCTION>
    <DECORATED>tt_face_colr_blend_layer</DECORATED>
    <FUNCLINE>1147</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1224</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_colr_blend_layer</FUNCTION>
    <DECORATED>tt_face_colr_blend_layer</DECORATED>
    <FUNCLINE>1147</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1286</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_colr_blend_layer</FUNCTION>
    <DECORATED>tt_face_colr_blend_layer</DECORATED>
    <FUNCLINE>1147</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcolr.c</FILENAME>
      <LINE>1287</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_colr_blend_layer</FUNCTION>
    <DECORATED>tt_face_colr_blend_layer</DECORATED>
    <FUNCLINE>1147</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcpal.c</FILENAME>
      <LINE>142</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_cpal</FUNCTION>
    <DECORATED>tt_face_load_cpal</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcpal.c</FILENAME>
      <LINE>278</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_palette_set</FUNCTION>
    <DECORATED>tt_face_palette_set</DECORATED>
    <FUNCLINE>261</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttcpal.c</FILENAME>
      <LINE>285</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_palette_set</FUNCTION>
    <DECORATED>tt_face_palette_set</DECORATED>
    <FUNCLINE>261</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsvg.c</FILENAME>
      <LINE>228</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_doc</FUNCTION>
    <DECORATED>find_doc</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsvg.c</FILENAME>
      <LINE>229</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_doc</FUNCTION>
    <DECORATED>find_doc</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsvg.c</FILENAME>
      <LINE>241</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_doc</FUNCTION>
    <DECORATED>find_doc</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsvg.c</FILENAME>
      <LINE>247</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_doc</FUNCTION>
    <DECORATED>find_doc</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsvg.c</FILENAME>
      <LINE>252</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>find_doc</FUNCTION>
    <DECORATED>find_doc</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttkern.c</FILENAME>
      <LINE>123</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_kern</FUNCTION>
    <DECORATED>tt_face_load_kern</DECORATED>
    <FUNCLINE>43</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttkern.c</FILENAME>
      <LINE>234</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_get_kerning</FUNCTION>
    <DECORATED>tt_face_get_kerning</DECORATED>
    <FUNCLINE>186</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttkern.c</FILENAME>
      <LINE>253</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_get_kerning</FUNCTION>
    <DECORATED>tt_face_get_kerning</DECORATED>
    <FUNCLINE>186</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttload.c</FILENAME>
      <LINE>991</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>28182</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer. 'table-&gt;langTags' contains the same NULL value as 'entry' did. </DESCRIPTION>
    <FUNCTION>tt_face_load_name</FUNCTION>
    <DECORATED>tt_face_load_name</DECORATED>
    <FUNCLINE>831</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>834</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>835</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>836</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>836</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>837</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>837</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>838</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>839</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>840</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>842</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>854</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>869</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>881</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>882</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>884</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>885</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>888</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>890</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>900</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>901</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>903</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>912</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>914</LINE>
        <COLUMN>54</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>918</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>921</LINE>
        <COLUMN>63</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>927</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>928</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'entry' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>931</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'entry&lt;limit' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>948</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>949</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>952</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>954</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>958</LINE>
        <COLUMN>55</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>964</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>965</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>966</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>969</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'count&gt;0')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>971</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>975</LINE>
        <COLUMN>33</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'entry-&gt;stringLength==0' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>979</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>980</LINE>
        <COLUMN>71</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>989</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
        <FILENAME>ttload.c</FILENAME>
        <LINE>991</LINE>
        <COLUMN>74</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'entry' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>410</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_strike_metrics</FUNCTION>
    <DECORATED>tt_face_load_strike_metrics</DECORATED>
    <FUNCLINE>282</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>313</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_strike_metrics</FUNCTION>
    <DECORATED>tt_face_load_strike_metrics</DECORATED>
    <FUNCLINE>282</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>526</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_init</FUNCTION>
    <DECORATED>tt_sbit_decoder_init</DECORATED>
    <FUNCLINE>485</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>741</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_byte_aligned</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_byte_aligned</DECORATED>
    <FUNCLINE>701</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>749</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_byte_aligned</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_byte_aligned</DECORATED>
    <FUNCLINE>701</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>749</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_byte_aligned</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_byte_aligned</DECORATED>
    <FUNCLINE>701</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>900</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_bit_aligned</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_bit_aligned</DECORATED>
    <FUNCLINE>846</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>900</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_bit_aligned</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_bit_aligned</DECORATED>
    <FUNCLINE>846</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>1001</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_compound</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_compound</DECORATED>
    <FUNCLINE>979</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>1339</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_image</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_image</DECORATED>
    <FUNCLINE>1252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>1309</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_sbit_decoder_load_image</FUNCTION>
    <DECORATED>tt_sbit_decoder_load_image</DECORATED>
    <FUNCLINE>1252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\UserFiles\Github\freetype\src\sfnt\</FILEPATH>
      <FILENAME>ttsbit.c</FILENAME>
      <LINE>1491</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tt_face_load_sbix_image</FUNCTION>
    <DECORATED>tt_face_load_sbix_image</DECORATED>
    <FUNCLINE>1464</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>